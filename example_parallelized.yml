star:
  temperature: 5782.0        # [K]
  radius: 6.95E8             # [m]
body:
  radius: 1737400.0          # [m]
  albedo: 0.12               # [-]
  albedo_type: geometric     # ['bond'/'geometric'/'normal']
  maps: 
    albedo: {filename: moon/lroc_cgi/lroc_color_poles_2k.tif, depth: 8.0, mean: 0.12}      # Albedo map
    displacement: {filename: moon/ldem_4.tif, depth: 1, scale: 1000.0}                     # Displacement map (BW = -+)
    normal: {filename: moon/lnormal_4.png, depth: 16.0}                                    # Normal map (RGB = XYZ)
  radiometry: {model: lambert}                                                             # Lambert reflection
  #radiometry: {model: oren, roughness: 0.5}                                                # Oren-Nayar reflection (rough surfaces)
  #radiometry: {model: specular, shineness: 1.0}                                            # Specular reflection (shiny surfaces) 
  #radiometry: {model: phong, shineness: 1.0, weight_lambert: 0.5, weight_specular: 2.0}    # Phong reflection (blend of Lambert and Specular)
camera:
  exposure_time: 1.5E-3             # [s]
  focal_length: 0.105               # [m]
  f_number: 4.0                     # [-]
  pixel_width: 5.5E-6               # [m]
  resolution: [1024.0, 1024.0]      # [px]
  full_well_capacity: 100000.0      # [e-]
  gain_analog2digital: 0.6553       # [DN/e-]
  quantum_efficiency: {lambda_min: [4.25E-7, 4.75E-7, 5.25E-7, 5.75E-7, 6.25E-7, 6.75E-7, 7.25E-7, 7.75E-7, 8.25E-7, 8.75E-7, 9.25E-7, 9.75E-7],    # [m] Detector wavebands lower limits
                       lambda_max: [4.75E-7, 5.25E-7, 5.75E-7, 6.25E-7, 6.75E-7, 7.25E-7, 7.75E-7, 8.25E-7, 8.75E-7, 9.25E-7, 9.75E-7, 1.025E-6],   # [m] Detector wavebands upper limits
                       values: [0.35, 0.43, 0.46, 0.45, 0.42, 0.37, 0.3, 0.23, 0.16, 0.09, 0.04, 0.02],                                             # [-]
                       sampling: piecewise}                                                                                                         # Sampling method ['piecewise'/'midpoint']
  transmittance: {lambda_min: [4.25E-7, 4.75E-7, 5.25E-7, 5.75E-7, 6.25E-7, 6.75E-7, 7.25E-7, 7.75E-7, 8.25E-7, 8.75E-7, 9.25E-7, 9.75E-7],    # [m] Detector wavebands lower limits
                  lambda_max: [4.75E-7, 5.25E-7, 5.75E-7, 6.25E-7, 6.75E-7, 7.25E-7, 7.75E-7, 8.25E-7, 8.75E-7, 9.25E-7, 9.75E-7, 1.025E-6],   # [m] Detector wavebands upper limits
                  values: [0.41, 0.687, 0.915, 0.954, 0.967, 0.977, 0.979, 0.982, 0.984, 0.987, 0.989, 0.992],                                 # [-]  
                  sampling: piecewise}                                                                                                         # Sampling method ['piecewise'/'midpoint']
scene:
  distance_body2star: 1.49597870707E11      # [m]
  distance_body2cam: 5E8                    # [m]
  phase_angle: 0.8                          # [rad]
  rollpitchyaw_cami2cam:                    # [rad] Attitude angles of Camera frame (CAM) with respect to Camera Ideal frame (CAMI)
  - [0.0]
  - [0.0]
  - [0.0]
  rollpitchyaw_csf2iau:                     # [rad] Attitude angles of Camera-target-Sun frame (CSF) with respect to International Astronomical Union frame (IAU)
  - [0.0]
  - [0.0]
  - [0.0]
setting:
  #general: {parallelization: false}                                                     # Single-thread parallelization 
  general: {parallelization: true, workers: 4}                                          # Multi-thread parallelization with specified number of workers 
  discretization: {method: fixed, number_points: 2e5}                                   # Fixed discretization with specified number of points
  #discretization: {method: adaptive, accuracy: medium}                                  # Adaptive discretization with ['high','medium','low'] degree of accuracy
  #sampling: {method: uniform}                                                           # Uniform longitude/latitude sampling
  sampling: {method: projecteduniform}                                                  # Projected-uniform longitude/latitude sampling
  #integration: {method: integral}                                                       # Normal integration (slow)
  #integration: {method: trapz, number_points: 10.0}                                     # Trapz integration with specified number of integration points (fast)
  integration: {method: constant}                                                       # Constant integration of BRDF (fastest)
  #gridding: {method: sum}                                                               # Sum of the point values falling into the same pixel.
  #gridding: {method: interpolation, scheme: linear}                                     # Interpolation of the point values at each pixel with a ['nearest','linear','natural','cubic'] interpolation scheme
  gridding: {method: weightedsum, algorithm: area}                                      # Weighted sum of the point values falling into the same pixel with an ['area','diff','invsquared'] weighting algorithm
  #gridding: {method: shiftedsum, shift: 1}                                              # Sum of the point values falling into the same pixel, doing a mean on point sets that are shifted on all directions of a specified quantity
  #gridding: {method: weightedshiftedsum, shift: 1, filter: gaussian}                    # Sum of the point values falling into the same pixel, doing a weighted mean on point sets that are shifted on all directions of a specified quantity with a ['gaussian'] weighting filter
  reconstruction: {granularity: 1.0}                                                    # Nominal grid, no reconstruction filter
  #reconstruction: {granularity: auto, filter: bilinear, antialiasing: true}             # Grid upsampled up to the specified granularity, then resized to nominal size with a ['nearest','bilinear','bicubic','lanczos2','lanczos3','gaussian','osculatory'] reconstruction filter
  processing: {distortion: false, diffraction: false, blooming: false, noise: false}    # Image processing: addition of distortion, PSF diffraction effects, blooming and noise 
  saving: {filename: example, format: png, depth: 16}                                   # Image saving with a specified bit depth, filename and format
